apply plugin: 'fatjar'
apply plugin: 'application'

description = "H2O Application Assembly"

dependencies {
  compile project(":h2o-app")
  compile project(":h2o-persist-hdfs")
  compile "org.slf4j:slf4j-log4j12:1.7.5"
}

fatJarPrepareFiles {
  exclude 'META-INF/*.DSA'
  exclude 'META-INF/*.SF'
  exclude 'synchronize.properties'
  exclude 'uploader.properties'
  exclude 'test.properties'
  exclude 'cockpitlite.properties'
  exclude 'devpay_products.properties'
}

fatJar {
   manifest {
      attributes 'Main-Class': 'water.H2OApp'
   }
}

// Setup Application plugin
mainClassName = 'water.H2OApp'
run {
  if (project.hasProperty("h2oArgs")) {
    args Eval.me(h2oArgs)
  }
}

//
// Support make infrastructure by copying the resulting assembly into parent
// project build directory
//

def assembly = "h2o-assembly.jar"
def allInOne = "h2o.jar"

task copyJar(type: Copy) {
    from ("${project.buildDir}/libs"){
        include assembly
    }
    into "${project.parent.buildDir}"
    rename { it.replace(assembly, allInOne) }
}
// Execute always copyJar
fatJar.finalizedBy copyJar
// Run fatJar as par of build
jar.finalizedBy fatJar

