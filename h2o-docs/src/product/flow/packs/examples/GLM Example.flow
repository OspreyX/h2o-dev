{
  "version": "1.0.0",
  "cells": [
    {
      "type": "md",
      "input": "# GLM Tutorial\n\nThe purpose of this tutorial is to walk new users through Generalized Linear Analysis (GLM) using H2O Flow.\n\nThose who have never used H2O before should refer to <a href=\"https://github.com/h2oai/h2o-dev/blob/master/h2o-docs/src/product/flow/README.md\" target=\"_blank\">Getting Started</a> for additional instructions on how to run H2O Flow.\n\n\nFor more details on the math behind H2O's implementation of GLM, refer to <a href=\"http://docs.h2o.ai/datascience/glm.html\" target=\"_blank\">GLM Data Science</a>. \n\n**Note**: GLM in H2O-Dev may provide slightly different coefficient values when applying an L1 penalty in comparison with H2O1.\n\n###Using GLM\nUse GLM when the variable of interest relates to predictions or inferences about a rate, an event, or a continuous measurement or for questions about how a set of environmental conditions influence the dependent variable.\n\nHere are some examples:\n\n- \"What attributes determine which customers will purchase, and which will not?\"\n- \"Given a set of specific manufacturing conditions, how many units produced will fail?\"\n- \"How many customers will contact help support in a given time frame?\"\n\n\n\n### Getting Started\nThis tutorial uses a publicly available data set that can be found at the UCI Machine Learning Repository: <a href=\"http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/\" target=\"_blank\">http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/</a>.\n\nThe original data are the Abalone data, available from UCI Machine Learning Repository. They are composed of 4177 observations on 9 attributes. All attributes are real valued, and continuous, except for Sex and Rings, found in columns 0 and 8 respectively.\nSex is categorical with 3 levels (male, female, and infant), and Rings is an integer valued count.\n\nTo further explore H2O's capabilities, some <a href=\"http://docs.h2o.ai/resources/publicdata.html\" target=\"_blank\">publicly available data sets</a> can be found on our website. \n\n\n\n####Importing Data\nBefore creating a model, import data into H2O:\n\n0. Click the **Assist Me!** button in the *Help* tab in the sidebar on the right side of the page. \n0. Click the **importFiles** link and enter the file path to the dataset in the **Search** entry field, or drag and drop the file onto the **Search** entry field and press Enter to confirm the file drop.  \n0. Click the **Add all** link to add the file to the import queue, then click the **Import** button. "
    },
    {
      "type": "cs",
      "input": "assist"
    },
    {
      "type": "cs",
      "input": "importFiles [ \"https://s3.amazonaws.com/h2o-public-test-data/smalldata/flow_examples/abalone.csv.gz\" ]"
    },
    {
      "type": "md",
      "input": "####Parsing Data\nNow, parse the imported data: \n\n0. Click the **Parse these files...** button. \n\n  **Note**: The default options typically do not need to be changed unless the data does not parse correctly. \n\n0. From the drop-down **Parser** list, select the file type of the data set (Auto, XLS, CSV, or SVMLight). \n0. If the data uses a separator, select it from the drop-down **Separator** list. \n0. If the data uses a column header as the first row, select the **First row contains column names** radio button. If the first row contains data, select the **First row contains data** radio button. To have H2O automatically determine if the first row of the dataset contains column names or data, select the **Auto** radio button. \n0. If the data uses apostrophes ( `'` - also known as single quotes), check the **Enable single quotes as a field quotation character** checkbox. \n0. To delete the imported dataset after parsing, check the **Delete on done** checkbox. \n\n  **NOTE**: In general, we recommend enabling this option. Retaining data requires memory resources, but does not aid in modeling because unparsed data cannot be used by H2O.\n\n0. Review the data in the **Data Preview** section, then click the **Parse** button.  \n\n  **NOTE**: Make sure the parse is complete by clicking the **View Job** button and confirming progress is 100% before continuing to the next step, model building. For small datasets, this should only take a few seconds, but larger datasets take longer to parse.\n"
    },
    {
      "type": "cs",
      "input": "setupParse paths: [ \"https://s3.amazonaws.com/h2o-public-test-data/smalldata/flow_examples/abalone.csv.gz\" ]"
    },
    {
      "type": "cs",
      "input": "parseFiles\n  paths: [\"https://s3.amazonaws.com/h2o-public-test-data/smalldata/flow_examples/abalone.csv.gz\"]\n  destination_key: \"abalone1.hex\"\n  parse_type: \"CSV\"\n  separator: 32\n  number_columns: 9\n  single_quotes: false\n  column_names: [\"C1\",\"C2\",\"C3\",\"C4\",\"C5\",\"C6\",\"C7\",\"C8\",\"C9\"]\n  column_types: [\"Enum\",\"Numeric\",\"Numeric\",\"Numeric\",\"Numeric\",\"Numeric\",\"Numeric\",\"Numeric\",\"Numeric\"]\n  delete_on_done: true\n  check_header: 1\n  chunk_size: 4194304"
    },
    {
      "type": "md",
      "input": "### Building a Model\n\n0. Once data are parsed, click the **Assist Me!** button, then click **buildModel**. \n0. Select `glm` from the drop-down **Select an algorithm** menu, then click the **Build model** button.  \n0. If the parsed Abalone .hex file is not already listed in the **Training_frame** drop-down list, select it. Otherwise, continue to the next step. \n0. In the **Ignored_Columns** field, select all columns except columns 1 and 9 from the *Available* section to move them into the *Selected* section.\n**Note**: You must include at least 2 columns. \n0. In the **Response** field, select the column associated with the Whole Weight variable (`C1`).\n0. Uncheck the **Standardize** checkbox.\n0. From the drop-down **Family** menu, select `gaussian`. \n0. Enter `0` in the **N_folds** field. If **N_folds** is greater than 0, the model displays the specified number of cross-validation models.  \n0. Use the default **Tweedie Variance Power** value (NaN).  This option is only used for the Tweedie family of GLM models (like zero-inflated Poisson).\n0. Enter `0.3` in the **Alpha** field. The alpha parameter is the mixing parameter for the L1 and L2 penalty.\n0. Enter `.002` in the **Lambda** field. \n0. Click the **Build Model** button."
    },
    {
      "type": "cs",
      "input": "assist"
    },
    {
      "type": "cs",
      "input": "buildModel"
    },
    {
      "type": "cs",
      "input": "buildModel 'glm', {\"destination_key\":\"glm-072b6da6-fc66-4288-b122-656db078301e\",\"training_frame\":\"abalone1.hex\",\"ignored_columns\":[\"C2\",\"C3\",\"C4\",\"C5\",\"C6\",\"C7\",\"C8\"],\"dropNA20Cols\":false,\"response_column\":\"C1\",\"solver\":\"ADMM\",\"max_iterations\":-1,\"beta_epsilon\":0,\"standardize\":false,\"family\":\"gaussian\",\"balance_classes\":false,\"link\":\"family_default\",\"tweedie_variance_power\":\"NaN\",\"tweedie_link_power\":\"NaN\",\"alpha\":[0.3],\"lambda\":[0.002],\"lambda_search\":false,\"use_all_factor_levels\":false,\"class_sampling_factors\":[],\"max_after_balance_size\":5,\"prior\":0,\"nlambdas\":-1,\"lambda_min_ratio\":-1}"
    },
    {
      "type": "md",
      "input": "### GLM Results\n\nTo view the results, click the **View** button. The GLM output includes coefficients (as well as normalized coefficients when\nstandardization is requested). The output also displays AIC, AUC, and deviance rates.  \n\nTo view more details, click the **Inspect** button. \n\nTo view the best coefficient values, click the **Coefficient Magnitudes** link. \n"
    },
    {
      "type": "cs",
      "input": "getModel \"glm-072b6da6-fc66-4288-b122-656db078301e\""
    },
    {
      "type": "cs",
      "input": "inspect getModel \"glm-072b6da6-fc66-4288-b122-656db078301e\""
    },
    {
      "type": "cs",
      "input": "grid inspect \"Coefficient Magnitudes\", getModel \"glm-072b6da6-fc66-4288-b122-656db078301e\""
    }
  ]
}
